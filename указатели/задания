Задание 1 
Объявить указатели на две переменные указанного типа. Используя указатели
произвести операции сложения и вычитания над переменными. Вывести адреса
указателей. Тип long long

#include <iostream>

int main() {
    // Объявление переменных и указателей на них
    long long var1 = 10, var2 = 5;
    long long* ptr1 = &var1, *ptr2 = &var2;

    // Сложение и вычитание переменных с помощью указателей
    *ptr1 = *ptr1 + *ptr2;
    *ptr2 = *ptr1 - *ptr2;
    std::cout << "*ptr1 + *ptr2: " << *ptr1 << std::endl;
    std::cout << "*ptr1 - *ptr2: " << *ptr2 << std::endl;

    // Вывод адресов указателей
    std::cout << "Adress ptr1: " << ptr1 << std::endl;
    std::cout << "Adress ptr2: " << ptr2 << std::endl;

    return 0;
}

Задание 2 
Написать функцию для обмена значений переменных, указанных выше. Передача по
указателю. Выполнить программу по шагам и выписать в тетрадь адреса указателей
и величины переменных. (long long)

#include <iostream>

void swap(long long* ptr1, long long* ptr2) {
    long long temp = *ptr1;
    *ptr1 = *ptr2;
    *ptr2 = temp;
}

int main() {
    long long var1 = 10, var2 = 5;
    long long* ptr1 = &var1, *ptr2 = &var2;

    std::cout << "Adress ptr1: " << ptr1 << ", value var1: " << var1 << std::endl;
    std::cout << "Adress ptr2: " << ptr2 << ", value var2: " << var2 << std::endl;

    swap(ptr1, ptr2);
    
    std::cout << "Adress ptr1: " << ptr1 << ", value var1: " << var1 << std::endl;
    std::cout << "Adress ptr2: " << ptr2 << ", value var2: " << var2 << std::endl;

    return 0;
}

Задание 3
Объявить динамический массив. Размер массива задаёт пользователь. Заполнить
массив случайными числами. Вывести на экран адреса и значения элементов
массива

#include <iostream>
#include <ctime>

int main() {
    int size;
    std::cout << "Enter size of massive: ";
    std::cin >> size;

    long long* arr = new long long[size];

    srand(time(0));
    for (int i = 0; i < size; i++) {
        arr[i] = rand() % 1000;
    }

    for (int i = 0; i < size; i++) {
        std::cout << "Adress " << i << ": " << &arr[i]
                  << ", value " << i << ": " << arr[i] << std::endl;
    }

    delete[] arr;

    return 0;
}

Задание 4с
Объявить сущность и описать её свойства. Объявить динамический массив
сущностей. Реализовать функцию, которая изменяет значения элемента (структура)
массива. Заполнить атрибуты числовыми и текстовыми значениями (диапазон
значений определить самостоятельно).
c. цветок

#include <iostream>
#include <string>

struct Flower {
    std::string name;
    std::string color;
    double price;
};

void modifyFlower(Flower* arr, int index, std::string newName, std::string newColor, double newPrice) {
    arr[index].name = newName;
    arr[index].color = newColor;
    arr[index].price = newPrice;
}

int main() {
    int size = 3;
    Flower* flowers = new Flower[size];

    flowers[0] = {"Rose", "Red", 100.0};
    flowers[1] = {"Tulip", "White", 80.0};
    flowers[2] = {"Orchid", "Purple", 250.0};

    for (int i = 0; i < size; i++) {
        std::cout << "Element " << i << ":" << std::endl;
        std::cout << "Name: " << flowers[i].name << std::endl;
        std::cout << "Color: " << flowers[i].color << std::endl;
        std::cout << "Price: " << flowers[i].price << std::endl;
    }

    std::cout << std::endl;

    modifyFlower(flowers, 1, "Peony", "Pink", 120.0);

    for (int i = 0; i < size; i++) {
        std::cout << "Element " << i << ":" << std::endl;
        std::cout << "Name: " << flowers[i].name << std::endl;
        std::cout << "Color: " << flowers[i].color << std::endl;
        std::cout << "Price: " << flowers[i].price << std::endl;
    }

    delete[] flowers;

    return 0;
}
